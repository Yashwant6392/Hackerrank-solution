int countSwaps(vector<int> arr, vector<int> sortedArr) {
    int n = arr.size();
    vector<bool> visited(n, false);
    int swaps = 0;

    // Map value to index in sorted array
    unordered_map<int, int> valueToIndex;
    for (int i = 0; i < n; ++i) {
        valueToIndex[sortedArr[i]] = i;
    }

    for (int i = 0; i < n; ++i) {
        if (visited[i] || valueToIndex[arr[i]] == i)
            continue;

        int cycleSize = 0;
        int j = i;
        while (!visited[j]) {
            visited[j] = true;
            j = valueToIndex[arr[j]];
            cycleSize++;
        }

        if (cycleSize > 1)
            swaps += cycleSize - 1;
    }

    return swaps;
}

int lilysHomework(vector<int> arr) {
    vector<int> asc = arr;
    vector<int> desc = arr;
    sort(asc.begin(), asc.end());
    sort(desc.begin(), desc.end(), greater<int>());

    int ascSwaps = countSwaps(arr, asc);
    int descSwaps = countSwaps(arr, desc);

    return min(ascSwaps, descSwaps);
}
